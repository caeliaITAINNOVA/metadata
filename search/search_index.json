{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DIGITbrain Project Documentation For full project details visit digitbrain.eu . About this documentation These docs aim to serve as a point of reference for users of DIGITbrain. The navigation bar to the left will serve as your guide.","title":"Home"},{"location":"#digitbrain-project-documentation","text":"For full project details visit digitbrain.eu .","title":"DIGITbrain Project Documentation"},{"location":"#about-this-documentation","text":"These docs aim to serve as a point of reference for users of DIGITbrain. The navigation bar to the left will serve as your guide.","title":"About this documentation"},{"location":"algorithm/","text":"Algorithms in DIGITbrain Introduction Algorithms are composed of one or more Microservices to provide some specific functionality and realise some goal. Metadata describing Algorithms The metadata specification for a DIGITbrain Algorithm comprises two sections: Description Service . Description Here is description Algorithm Here is algorithm","title":"Algorithm"},{"location":"algorithm/#algorithms-in-digitbrain","text":"","title":"Algorithms in DIGITbrain"},{"location":"algorithm/#introduction","text":"Algorithms are composed of one or more Microservices to provide some specific functionality and realise some goal.","title":"Introduction"},{"location":"algorithm/#metadata-describing-algorithms","text":"The metadata specification for a DIGITbrain Algorithm comprises two sections: Description Service .","title":"Metadata describing Algorithms"},{"location":"algorithm/#description","text":"Here is description","title":"Description"},{"location":"algorithm/#algorithm","text":"Here is algorithm","title":"Algorithm"},{"location":"data/","text":"Data in DIGITbrain Introduction Data are collected or generated in real-time, often at the shop floor. Metadata describing Data The metadata specification for DIGITbrain Data comprises several sections Administrative Data Descriptive/Identification Data Search Support Datakind specification Data access specification Open Parameters Further Access Clauses Data Content Semantics","title":"Data"},{"location":"data/#data-in-digitbrain","text":"","title":"Data in DIGITbrain"},{"location":"data/#introduction","text":"Data are collected or generated in real-time, often at the shop floor.","title":"Introduction"},{"location":"data/#metadata-describing-data","text":"The metadata specification for DIGITbrain Data comprises several sections Administrative Data Descriptive/Identification Data Search Support Datakind specification Data access specification Open Parameters Further Access Clauses Data Content Semantics","title":"Metadata describing Data"},{"location":"deployment/","text":"Deployments in DIGITbrain Introduction A deployment in DIGITbrain specifies the infrastructure that a desired DMA Tuple will be deployed across. Metadata describing Deployment The metadata specification for a DIGITbrain Deployment has three sections: Description Deployments Data Source Mapping Description This section provides high-level descriptive metadata for the deployment being defined. name Required \u2013 A memorable name for this deployment. author Required \u2013 The author of this deployment metadata. date Auto-generated \u2013 Today's date. id Auto-generated \u2013 A DIGITbrain ID. Deployments Here it is necessary to provide details on the type of infrastructure that this deployment will define, along with all the configuration details of that infrastructure. The following fields are available: type Required \u2013 DIGITbrain supports cloud infrastructure deployed via the CloudBroker platform, or bring-your-own Linux-based Edge devices. This should be specified in this field. The other metadata in this section should be completed according to the type (e.g. CloudBroker-specific metadata is not required if type: edge ) cloudbroker edge type : cloudbroker cloudbroker : deployment_id : instance_type_id : key_pair_id : opened_port : endpoint : type : edge edge : endpoint : cloudbroker.deployment_id Required \u2013 A CloudBroker deployment ties together software, resource and region. Indicative IDs are given below, but any LTS Debian-based Linux distribution should be supported. It is recommended to use the MiCADO-Optimised deployment. MiCADO-Optimised Ubuntu 20.04 Ubuntu 18.04 Custom cloudbroker : deployment_id : 27f3dd48-1dac-4d3c-8b7f-39338ed55543 cloudbroker : deployment_id : 16b1e2d4-3a2c-406e-8c45-5637099021f0 cloudbroker : deployment_id : 5a081b54-8992-4ff7-8a21-74e425062507 <!-- Find your deployment_id at this URL --> https:// < cloudbroker-endpoint > /deployments/ < deployment-id > cloudbroker.instance_type_id Required \u2013 The CloudBroker instance type defines the CPU and RAM that will be available on the infrastructure. Indicative IDs are given below. The minimum requirements are a 2 vCPU/2GB RAM 2 vCPU | 4GB RAM 4 vCPU | 8GB RAM 8 vCPU | 16GB RAM Custom cloudbroker : instance_type_id : ca727925-a5ca-4697-b2c3-8788d82457d5 cloudbroker : instance_type_id : ffb42759-fb52-4401-9c75-889ea0ed9602 cloudbroker : instance_type_id : 664330f3-42b1-4f52-a675-fd182a21ef51 <!-- Find your instance_type_id at this URL --> https:// < cloudbroker-endpoint > /instance_types/ < instance-type-id > cloudbroker.key_pair_id Optional \u2013 The CloudBroker ID for an SSH key pair, for remote access to the infrastructure. A key pair must be created on the platform. Custom <!-- Find your key_pair_id at this URL --> https:// < cloudbroker-endpoint > /key_pairs/ < key-pair-id > cloudbroker.opened_port Optional \u2013 A comma-separated string listing port numbers, which will be opened on the instance (both TCP and UDP protocols will be affected). Custom cloudbroker : opened_port : 80,443,8080,30010 cloudbroker.endpoint Required \u2013 The endpoint of the CloudBroker platform that will handle the deployment of the above infrastructure. DIGITbrain cloudbroker : endpoint : https://cloudsme-cbp.scaletools.com.ua edge.endpoint Required \u2013 The endpoint of the bring-your-own Edge device that provides this Deployment. Your Edge Device edge : endpoint : https://192.168.1.1 Data Source Mapping This section of the metadata maps Microservices to Data assets. data_source_mapping Required \u2013 Map Microservices (by their ID) to the Data assets required by each Microservice. Example data_source_mapping : <microservice-A-id> : [ <data-A-id> , <data-B-id> ] <microservice-B-id> : [ <data-A-id> ]","title":"Deployment"},{"location":"deployment/#deployments-in-digitbrain","text":"","title":"Deployments in DIGITbrain"},{"location":"deployment/#introduction","text":"A deployment in DIGITbrain specifies the infrastructure that a desired DMA Tuple will be deployed across.","title":"Introduction"},{"location":"deployment/#metadata-describing-deployment","text":"The metadata specification for a DIGITbrain Deployment has three sections: Description Deployments Data Source Mapping","title":"Metadata describing Deployment"},{"location":"deployment/#description","text":"This section provides high-level descriptive metadata for the deployment being defined. name Required \u2013 A memorable name for this deployment. author Required \u2013 The author of this deployment metadata. date Auto-generated \u2013 Today's date. id Auto-generated \u2013 A DIGITbrain ID.","title":"Description"},{"location":"deployment/#deployments","text":"Here it is necessary to provide details on the type of infrastructure that this deployment will define, along with all the configuration details of that infrastructure. The following fields are available: type Required \u2013 DIGITbrain supports cloud infrastructure deployed via the CloudBroker platform, or bring-your-own Linux-based Edge devices. This should be specified in this field. The other metadata in this section should be completed according to the type (e.g. CloudBroker-specific metadata is not required if type: edge ) cloudbroker edge type : cloudbroker cloudbroker : deployment_id : instance_type_id : key_pair_id : opened_port : endpoint : type : edge edge : endpoint : cloudbroker.deployment_id Required \u2013 A CloudBroker deployment ties together software, resource and region. Indicative IDs are given below, but any LTS Debian-based Linux distribution should be supported. It is recommended to use the MiCADO-Optimised deployment. MiCADO-Optimised Ubuntu 20.04 Ubuntu 18.04 Custom cloudbroker : deployment_id : 27f3dd48-1dac-4d3c-8b7f-39338ed55543 cloudbroker : deployment_id : 16b1e2d4-3a2c-406e-8c45-5637099021f0 cloudbroker : deployment_id : 5a081b54-8992-4ff7-8a21-74e425062507 <!-- Find your deployment_id at this URL --> https:// < cloudbroker-endpoint > /deployments/ < deployment-id > cloudbroker.instance_type_id Required \u2013 The CloudBroker instance type defines the CPU and RAM that will be available on the infrastructure. Indicative IDs are given below. The minimum requirements are a 2 vCPU/2GB RAM 2 vCPU | 4GB RAM 4 vCPU | 8GB RAM 8 vCPU | 16GB RAM Custom cloudbroker : instance_type_id : ca727925-a5ca-4697-b2c3-8788d82457d5 cloudbroker : instance_type_id : ffb42759-fb52-4401-9c75-889ea0ed9602 cloudbroker : instance_type_id : 664330f3-42b1-4f52-a675-fd182a21ef51 <!-- Find your instance_type_id at this URL --> https:// < cloudbroker-endpoint > /instance_types/ < instance-type-id > cloudbroker.key_pair_id Optional \u2013 The CloudBroker ID for an SSH key pair, for remote access to the infrastructure. A key pair must be created on the platform. Custom <!-- Find your key_pair_id at this URL --> https:// < cloudbroker-endpoint > /key_pairs/ < key-pair-id > cloudbroker.opened_port Optional \u2013 A comma-separated string listing port numbers, which will be opened on the instance (both TCP and UDP protocols will be affected). Custom cloudbroker : opened_port : 80,443,8080,30010 cloudbroker.endpoint Required \u2013 The endpoint of the CloudBroker platform that will handle the deployment of the above infrastructure. DIGITbrain cloudbroker : endpoint : https://cloudsme-cbp.scaletools.com.ua edge.endpoint Required \u2013 The endpoint of the bring-your-own Edge device that provides this Deployment. Your Edge Device edge : endpoint : https://192.168.1.1","title":"Deployments"},{"location":"deployment/#data-source-mapping","text":"This section of the metadata maps Microservices to Data assets. data_source_mapping Required \u2013 Map Microservices (by their ID) to the Data assets required by each Microservice. Example data_source_mapping : <microservice-A-id> : [ <data-A-id> , <data-B-id> ] <microservice-B-id> : [ <data-A-id> ]","title":"Data Source Mapping"},{"location":"dma_tuple/","text":"DMA Tuples in DIGITbrain Introduction The Data-Model-Algorithm (DMA) Tuple is the deployable unit in DIGITbrain. Metadata describing DMA Tuples The metadata specification for DIGITbrain DMA Tuples contains the following fields:","title":"DMA Tuple"},{"location":"dma_tuple/#dma-tuples-in-digitbrain","text":"","title":"DMA Tuples in DIGITbrain"},{"location":"dma_tuple/#introduction","text":"The Data-Model-Algorithm (DMA) Tuple is the deployable unit in DIGITbrain.","title":"Introduction"},{"location":"dma_tuple/#metadata-describing-dma-tuples","text":"The metadata specification for DIGITbrain DMA Tuples contains the following fields:","title":"Metadata describing DMA Tuples"},{"location":"ma_pair/","text":"MA Pairs in DIGITbrain Introduction The Model-Algorithm (MA) Pair is the pairing of model and algorithm. Metadata describing MA Pairs The metadata specification for DIGITbrain MA Pairs contains the following fields:","title":"MA Pair"},{"location":"ma_pair/#ma-pairs-in-digitbrain","text":"","title":"MA Pairs in DIGITbrain"},{"location":"ma_pair/#introduction","text":"The Model-Algorithm (MA) Pair is the pairing of model and algorithm.","title":"Introduction"},{"location":"ma_pair/#metadata-describing-ma-pairs","text":"The metadata specification for DIGITbrain MA Pairs contains the following fields:","title":"Metadata describing MA Pairs"},{"location":"microservice/","text":"Microservices in DIGITbrain Introduction Microservices are the smallest building-block in DIGITbrain. They are containerised applications that provide some required functionality. Microservices can be composed together to create an Algorithm, which uses the functionality of potentially multiple Microservices to realise some goal. Metadata describing Microservices The metadata specification for DIGITbrain microservices comprises several sections: Description Service Hardware Requirements OS Requirements Input Data Output Data Model Parameters Metrics","title":"Microservice"},{"location":"microservice/#microservices-in-digitbrain","text":"","title":"Microservices in DIGITbrain"},{"location":"microservice/#introduction","text":"Microservices are the smallest building-block in DIGITbrain. They are containerised applications that provide some required functionality. Microservices can be composed together to create an Algorithm, which uses the functionality of potentially multiple Microservices to realise some goal.","title":"Introduction"},{"location":"microservice/#metadata-describing-microservices","text":"The metadata specification for DIGITbrain microservices comprises several sections: Description Service Hardware Requirements OS Requirements Input Data Output Data Model Parameters Metrics","title":"Metadata describing Microservices"},{"location":"model/","text":"Models in DIGITbrain Introduction A model is used by an algorithm for some specific use case. Metadata describing Models The metadata specification for DIGITbrain models comprises several sections: Define Parameterize Dependant FMUs OS Requirements Hardware Requirements Publish","title":"Model"},{"location":"model/#models-in-digitbrain","text":"","title":"Models in DIGITbrain"},{"location":"model/#introduction","text":"A model is used by an algorithm for some specific use case.","title":"Introduction"},{"location":"model/#metadata-describing-models","text":"The metadata specification for DIGITbrain models comprises several sections: Define Parameterize Dependant FMUs OS Requirements Hardware Requirements Publish","title":"Metadata describing Models"},{"location":"supporting_metadata/","text":"Supporting Metadata in DIGITbrain Introduction Supporting metadata supports the DMA Tuple. Supporting Metadata The metadata specification for additional DMA metadata comprises four sections: Person Legal Entity (Organisation) IP Family IP Instance","title":"Supporting Metadata"},{"location":"supporting_metadata/#supporting-metadata-in-digitbrain","text":"","title":"Supporting Metadata in DIGITbrain"},{"location":"supporting_metadata/#introduction","text":"Supporting metadata supports the DMA Tuple.","title":"Introduction"},{"location":"supporting_metadata/#supporting-metadata","text":"The metadata specification for additional DMA metadata comprises four sections: Person Legal Entity (Organisation) IP Family IP Instance","title":"Supporting Metadata"},{"location":"assets/algorithm/","text":"Concept Key Subkey Type Example Value Comment Condition Description id String algorithm_10824912410291 a unique id to identify this asset mandatory name String Object Detection Algorithm for detection of faulty weld seams a human-readable name to ease identification and discoverability for human users mandatory description String This algorithm can be used to solve a specifc problem, and applies some fancy technologies. a short, human-readable description of the Algorithm to aid a human user in analysing the Algorithm\u2019s capabilities and its applicability to a certain problem mandatory classificationSchema Enumeration { Simulation, ML, others } ML the classification of the Algorithm, to describe the specialization area mandatory type List( String) {neural network, deep learning, convolutional neural network, CNN} a detailed list of attributes to describe the Algorithm\u2019s field of application mandatory author String DFKI the authoring entity mandatory date Date (auto generated) 06.04.2021 the creation data mandatory version String 1.0 the version mandatory Algorithm listOfMicroservices List( String) {microserviceAsset_id_121241241} a list of Microservice Asset IDs, which are contained in the algorithm mandatory deploymentMapping Map( String: String) {microserviceA:hostB, microserviceB:hostB, microserviceC:hostC} an abstract definition of which microservice shall run on which host, to indicate which Microservices may need to run on the same host mandatory volumeMapping Map( String: List(String)) {microserviceA: [microserviceA, microserviceB], microserviceB:[], microserviceC:[]} a list of Microservice Asset IDs, which are contained in the algorithm optional","title":"Algorithm"},{"location":"assets/data/","text":"Concept Key Subkey Type example Value Comment Condition Administrative data (system managed) ID id e.g. UUID Unique identifier of the data resource. AUTO AUTHOR id e.g. UUID Unique identifier of the user who created this record AUTO DATA_PROVIDER id e.g. UUID Legal entity who provides the data resource (owner). It is the affiliation of the author by default. AUTO DATE timestamp e.g. 10:45:13 CET 21/03/2021 Date of data resource registration. AUTO PARENT id e.g. inherit legal entity, contact details from a parent record. Refercing a parent record. All fields of parent are inherited by this record, fields filled here will override parent field values (?). OPTIONAL Descriptive/identification data (human readable) DATA_NAME string e.g. CNSPiezoBolt#1 (in directory: factory 1 / machine1 / piezobolts/) Name of the data resource. (The directory hierarchy in Nexus provides a fully qualified (FQ) name, which is unique.) mandatory VERSION string default: 1.0.0 e.g. 2.3.4 Version of this data resource entry (major.minor.patch) OPTIONAL DATA_SIZE integer e.g. 112m Estimated/exact size of data (e.g. file size, volume size, or message size); might be used to assess HW requirements (RAM, CPU) . In bytes (k - kilo, m - mega, t - tera, p - peta) OPTIONAL DATA_CONTACT string e.g. info@company.com Data provider contact point, e.g. email address, to get access to these data (ask permissions/credentials to use these data). Optional if it corresponds to DATA_PROVIDER (email) details. mandatory DATA_DESC string e.g. \u201cThis sensor measures temperature in Celsius, sends data via ConSenses edge device via an MQTT broker\u201d Human readable description of the data resource. OPTIONAL DATA_SPECS_DOC URL e.g. data-source-specification-sheet.pdf More detailed specification of data source characteristics (doc, pdf, \u2026) Search support (machine processable) DATA_TAGS list of strings e.g. [camera, rgb, w640, h480, jpg] A list of tags freely added to help in searching/indexing (not limited to a basic set of tags, keywords) OPTIONAL Datakind specification DATA_KIND enum FILE DIRECTORY DATABASE DATA_DIRECTION enum SOURCE SINK BIDIRECTIONAL DATA_FORMAT list of strings e.g. [ { application/json text/plain application/octet-stream Data access specification DATA_SOURCE_TYPE string e.g. S3 MYSQL MQTT DATA_URI (pseudo vars: DATA_PROTOCOL, DATA_HOST, DATA_PORT, DATA_PATH, DATA_QUERY, DATA_FRAGMENT) URI protocol://host:port/path e.g. s3://amazonaws/bucket/object kafka://host/topic#1 ... Accessibility of the data resource, including host, port information, protocol, and other fields (path is protocol dependent, can be a topic name). GUI may show host, port, path separately. Hidden at search. mandatory (WP6 open) DATA_AUTH_TYPE list of enums e.g. [ { none userpass accesskey_secretkey Open parameters (not specified) DATA_CREDENTIALS OPEN Credentials (e.g. string/json, zip, config file) OPEN Further access clauses (extensible) DATA_PROTOCOL string e.g. HTTP, HTTPS, TCP, UDP Protocol to use in communication with the data source, only if DATA_TYPE does not imply it (e.g. S3 over HTTP). Moved from to Data access specification. OPTIONAL DATA_MYSQL_DIALECT string e.g. mysqldialect mariadbdialect Protocol dialect to be used in communication with the database DATA_MQTT_PROTOCOL_VERSION string e.g. 3.1.1, 5.0 MQTT protocol version must be used OPTIONAL DATA_KAFKA_BROKER_VERSION string e.g. 2.7.0 Kafka broker version OPTIONAL DATA_S3_REGION string e.g. eu-central-1 S3 region OPTIONAL Data content semantics DATA_SCHEMA string e.g. database schema file contents (or URL?) Describes message internal structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, ... OPTIONAL DATA_SCHEMA_ADDITIONAL_ATTRIBUTES string Further restriction/specialization of DATA_SCHEMA, \u201cgeneral\u201d schema. OPTIONAL","title":"Data"},{"location":"assets/deployment/","text":"Concept Key sub key Type Example Value Comment condition Description id UUID DIGITbrain reference Mandatory name String Short name for the node/device Mandatory author String Created by Mandatory date Date (auto generated) Created on Mandatory Deployments type Enumeration {cloudbroker, edge} computing centre Mandatory cloudbroker Map of\u2026 if type:cloudbroker deployment_id UUID ID of CloudBroker Deployment if type:cloudbroker instance_type_id UUID ID of CloudBroker InstanceType if type:cloudbroker key_pair_id UUID ID of CloudBroker Key Pair if type:cloudbroker opened_port String (comma separated integers) Ports to open at cloud side if type:cloudbroker endpoint URL Endpoint of the CB Platform if type:cloudbroker edge Map of\u2026 if type:edge endpoint URL accesible IP or FQDN of edge device if type:edge Data Source Mapping data_source_mapping Map of\u2026 Optional microserviceA_data List of UUIDs UUIDs of required data sources for MicroserviceA microserviceB_data List of UUIDs UUIDs of required data sources for MicroserviceB microserviceC_data List of UUIDs UUIDs of required data sources for MicroserviceC","title":"Deployment"},{"location":"assets/dma_tuple/","text":"Concept Key Subkey Type example Value Comment Condition ID ID / URI 123e4567-e89b-12d3-a456-426614174000 Unique identifier for the DMA Tuple AUTO Created at ISO 8601 2021-05-01T00:00:00Z Date of creation AUTO Version Integer 21 Version number of the DMA Tuple Author ID / URI person_123e4567-e89b-12d3 (auto) Identifier of the Author of the MA Pair (NB: Entity for author is referenced) AUTO Licensor ID / URI legal_entity_123e4567-e89b-12d3 (auto) Identifier of the Legal Entity licensing the the MA Pair (NB: Entity for Licensor is referenced) AUTO Derivation IDs / URIs dma_tuple_123e4567-e89b-12d3 (auto) In case of derivation, references to parent / child (optional) AUTO Name Text Pressure drop for the injection in hall 3 Short name to identify the DMA Tuple Scope Text Effectiveness of the mold closing process Short description of the scope of the DMA Tuple (human readable) IP Instance ID / URI ip_instance_123e4567-e89b-12d3 Identifier of the IP Instance the DMA Tuple is valid for (NB: Entity for IP Instance is referenced) Namespace ID / URI? namespace_123e4567-e89b-12d3 Context to interpret the associated information (optional?) MA Pair ID / URI ma_pair_123e4567-e89b-12d3 Identifier of the MA Pair associated to the DMA Tuple D Assets IDs / URIs data_123e4567-e89b-12d3 Identifiers of the Data Assets associated to the DMA Tuple Deployments See \"Deployments\" deployments_123e4567-e89b-12d3 Characteristics of the Deployment for every Microservice associated to the DMA Tuple (NB: Entities for the available deployment infrastructures to be provided by DB Solution and selected for DMA Tuple. No deployment entity metadata structure currently exists) Schedule Dates R90/2021-05-01T00:00:00Z/PT48H Days and hours the DMA Tuple will be active (optional) Payload String {\u2018injectionMold\u2019: \u2018Circuit Case\u2019} User-defined key-value pairs: JSON string with additional information (optional)","title":"DMA Tuple"},{"location":"assets/ma_pair/","text":"Concept Key Subkey Type Example value Comment Condition ID UUID 123e4567-e89b-12d3-a456-426614174000 Unique identifier for the MA Pair AUTO Created at ISO 8601 2021-05-01T00:00:00Z Date of creation AUTO Version Integer 21 Version number of the MA Pair Author UUID person_123e4567-e89b-12d3 (auto) Identifier of the Author of the MA Pair (NB: Entity for author is referenced) AUTO Licensor UUID legal_entity_123e4567-e89b-12d3 (auto) Identifier of the Legal Entity licensing the MA Pair (NB: Entity for Licensor is referenced) AUTO Derivation UUID ma_pair_123e4567-e89b-12d3 (auto) In case of derivation, references to parent / child (optional) AUTO Name Text Pressure drop Short name to identify the MA Pair Scope Text Effectiveness of the mold closing process Short description of the scope of the MA Pair (human readable) IP Family UUID ip_family_123e4567-e89b-12d3 Identifier of the IP Family the MA Pair is valid for Namespace UUID? namespace_123e4567-e89b-12d3 Context to interpret the associated information (optional?) M Asset UUID model_123e4567-e89b-12d3 Identifier of the Model Asset associated to the MA Pair (NB: The corresponding model file is indicated in Model metadata (first tab) as Model_URI and the corresponding zip file needs to be served to the Algorithm to evaluate the Model by the Microservice (MODEL_FILENAME)) A Asset UUID algorithm_123e4567-e89b-12d3 Identifiers of the Algorithm Asset associated to the MA Pair Rules UUIDs rules_123e4567-e89b-12d3 References to recommended Rules to be verified per Evaluation of the MA Pair Frequency Integer 12 Recommended number of evaluations conducted per hour for the MA Pair (optional) Payload String {\u2018minPressure\u2019: 90, \u2018maxPressure\u2019: 120} User-defined key-value pairs: JSON string with additional information (optional)","title":"MA Pair"},{"location":"assets/microservice/","text":"Concept Key Subkey Type Example Value Description Condition Description id String microservice_12312124 unique DIGITbrain reference mandatory name String Object Detection for faulty parts human readable short, yet descriptive name of the Microservice mandatory author String DFKI name of the authoring entity mandatory date Date (auto generated) 06.04.2021 creation date mandatory version String 1.0 version mandatory description String This microservices solves a certain problem using very specific methods. It supports some special input types, and allows results to be presented in chosen format. human readable short description of the Microservice's capabilities, e.g. which problems could be solved with it mandatory classificationSchema Enumeration { Simulation, ML, others } other fine-granular classification of the Microservice mandatory type List( String) {neural network, deep learning, convolutional neural network, CNN} detailed type of the microservice, list of keywords mandatory Service deploymentFormat Enumeration {docker-compose, kubernetes-manifest} docker-compose identifier of the deployment environment required to deploy the Microservice's container mandatory deploymentData JSON \"services\": { \"db\": { \"image\": \"nginx\" } } JSON of docker-compose or kubernetes manifest required to run the container mandatory configurationData Map(Files) filename: , other_filename: configuration file(s) required by the service optional mountedInputDirectories List(String) /data directories shared on the host where this microservice can find required inputs optional mountedOutputDirectories List(String) /data_out directories shared on the host where this microservice can find required outputs optional Hardware Requirements recommendedNumberOfGPUs Int 2 recommended number of GPUs optional minimumNumberOfGPUs Int 1 minimum required number of GPUs optional recommendedGPURAM Int 6 recommended amount of GPU memory in GB optional minimumGPURAM Int 1 minimum required amount of GPU memory in GB optional gpuType String NVidia (compute capability >= 7.0) a description of the type of GPUs, and further specifications, to allow the execution of the Microservice optional hpcRequired Bool true whether this Microservice requires an HPC environment to be executed efficiently optional edgeType Enumeration {TPU (Google), NPU (Qualcomm), FPGA, NVIDIA Jetson AGX} NVIDIA Jetson AGX required type of edge device to allow the execution of the Microservice optional recommendedRAM String 16 recommended amount of memory in GB optional minimumRAM String 2 minimum required amount memory in GB optional recommendedCPUs Int 4 recommended number of CPU cores optional minimumCPUs Int 2 minimum required number of CPU cores optional requiredDiskSpace Int 42 required amount of disk space in GB optional OS Requirements osArch String x86_64 supported os architecture mandatory osType String linux supported os type optional osDistribution String ubuntu supported os distribution optional osVersion String 20.04 description of supported os version optional Input Data(WP4) inputData List( Data Objects) {{DATA_KIND = {FILE, STREAM}, DATA_DIRECTION = {SOURCE}} list of Data objects for each required input, specified using the \"DATA\" fields listed below optional Data Object Fields input_id String file1 human-readable identifier, unique within a Microservice mandatory DATA_KIND List( DATA_KIND) {FILE, STREAM} supported types of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. mandatory DATA_DIRECTION List( DATA_DIRECTION) {SINK, BIDIRECTIONAL} supported direction of data flow (source: data provider, sink: data consumer/storage) mandatory DATA_FORMAT List( DATA_FORMAT) {application/zip, image/jpg} supported format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files). optional DATA_SOURCE_TYPE List( DATA_SOURCE_TYPE) {MYSQL, KAFKA} supported exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI optional DATA_PROTOCOL List( DATA_PROTOCOL) {HTTP} supported protocols optional DATA_AUTH_TYPE List( DATA_AUTH_TYPE) {tls_mutual, userpass} supported authentication type optional DATA_MYSQL_DIALECT List( DATA_MYSQL_DIALECT) {mariadbdialect} supported MYSQL dialect optional DATA_MQTT_PROTOCOL_VERSION List( DATA_MQTT_PROTOCOL_VERSION) {2.3.1} supported MQTT protocol version optional DATA_KAFKA_BROKER_VERSION List( DATA_KAFKA_BROKER_VERSION) {2.7.1, 2.5} supported Kafka broker version optional DATA_S3_REGION List( DATA_S3_REGION) {eu-central-1} supported S3 region optional DATA_SCHEMA List( DATA_SCHEMA) {jpg} supported internal message structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, \u2026 optional Output Data (WP4) outputData List( Data Objects) {{DATA_KIND = {FILE, STREAM}, DATA_DIRECTION = {SINK}} list of Data objects for each generated output, specified using the \"DATA\" fields listed below optional Data Object Fields output_id String file1 human-readable identifier, unique within a Microservice mandatory DATA_KIND List( DATA_KIND) {FILE, STREAM} supported types of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. mandatory DATA_DIRECTION List( DATA_DIRECTION) {SINK, BIDIRECTIONAL} supported direction of data flow (source: data provider, sink: data consumer/storage) mandatory DATA_FORMAT List( DATA_FORMAT) {application/zip, image/jpg} supported format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files) optional DATA_SOURCE_TYPE List( DATA_SOURCE_TYPE) {MYSQL, KAFKA} supported exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI. optional DATA_PROTOCOL List( DATA_PROTOCOL) {HTTP} supported protocols optional DATA_AUTH_TYPE List( DATA_AUTH_TYPE) {tls_mutual, userpass} supported authentication type optional DATA_MYSQL_DIALECT List( DATA_MYSQL_DIALECT) {mariadbdialect} supported MYSQL dialect, for each generated output optional DATA_MQTT_PROTOCOL_VERSION List( DATA_MQTT_PROTOCOL_VERSION) {2.3.1} supported MQTT protocol version optional DATA_KAFKA_BROKER_VERSION List( DATA_KAFKA_BROKER_VERSION) {2.7.1, 2.5} supported Kafka broker version optional DATA_S3_REGION List( DATA_S3_REGION) {eu-central-1} supported S3 region optional DATA_SCHEMA List( DATA_SCHEMA) {jpg} supported internal message structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, \u2026 optional Model(WP5) model_types List( ModelTypes) {SavedModel (Tensorflow)} list of supported Model types optional model_recommendedAuthTools List (AuthTools) {PreSTRA} list of recommended AuthoringTools used to generate the Model optional Parameters parameters List( Parameter) list of Parameter objects for each possible parameters, to be specified before deployment optional Parameter Fields name String detection_threshold short name for this parameter (should be unique across the Microservice\u2019s parameters) mandatory type Enumeration (xsd datatypes) Integer expected input type (may be used to verify the input) mandatory mandatory Boolean true whether this parameter is mandatory (default: false) optional defaultValue has to match \"type\" 42 a default value, if the parameter is required but not provided optional description String This parameter can be used to configure the included algorithm in a certain way, possible values: \"A\", \"B\", \"Z\" short description of the parameter and its possible values mandatory Metrics metrics List( Metrics) list of Metric objects for each metric collected by the Microservice optional Metric Fields name String meanTemperature short name (should be unique across the Microservice's metrics) mandatory correspondingMeasurement String temperature1 identification of the corresponding measurement, i.e. output of the Model mandatory function String arithmetic mean short description of the mathematical approach used to derive this value mandatory unit String degree celsius the unit of the metric measurement mandatory description String This metric describes the arithmetic mean of the approximated temperatures of the fabricated part when it leaves station 4. short description of the metric measurement mandatory","title":"Microservice"},{"location":"assets/model/","text":"Concept Key Subkey Type example Value Comment Condition DEFINE ID UUID Internal DigitBrain reference (automatically generated) Name string Name of the model Version semver (if model only has revisions, use semver prerelease 0.1, 0.2, etc.) Version of the model License enum tbd in SAD group License of the model Provider string Provider name: Institution or Person Provider_contacts obj OPTIONAL: Dictionary with keys being phone, email, address - Type takes into account co-simulation models, for which solver info is mandatory (next slide) AuthTool enum Authoring Tool used to create the model Type enum ML, LCA, 3D FEM and CFD, System simulation, discrete event simulation, co-simulation (it couples a model with specific algorithms) - The original term Path was proposed to be changed (SAD) Fidelity number OPTIONAL: Error of the model\u2019s prediction Model_URI URI Where the model file is stored Where the model file is stored DigitBrain certified external model repository - We could keep these fields into minimum and add further enums if needed, e.g. Linear_equations Model_FILENAME string Name of the model file (if necessary) for example when MODEL_URI points to a repository and not a single file optional State_depend bool stateful -> 1, stateless -> 0 PARAMETRIZE In-slots array of obj (key (group.key), name, dimensions (e.g. 2, 3, etc.), units (human-readable-name, exponents, offset, scale), default value, ranges, description) Values on which the model is evaluated (or parameters that might set before or during the evaluation) - Inputs and parameters together, although if needed we can still differentiate them internally in key field for each specific model. Outputs Values that the model approximates CosimSolverInfo ** OPTIONAL (for co-simulation Type only) Dependant FMUs Dependencies array of URI Dependant FMUs for co-simulation OS Requirements osArch enum OS architecture type (e.g. x86_64) osType enum OS type (e.g. Windows, Linux) osDistribution enum OS distributun (e.g. Ubuntu, Fedora) Hardware Requirements recommendedNumberOfGPUCores number Recommended number of GPU cores optional minimumNumberOfGPUCores number Minimum required number of GPU cores optional recommendedGPURAM number Recommended GPU memory optional minimumGPURAM number Minimum required GPU memory optional recommendedRAM number Recommended Memory optional minimumRAM number Minimum required memory optional recommendedCPUs number Recommended number of CPU cores optional minimumCPUs number Minimum required number of CPU cores optional requiredDiskSpace number Required amount of disk space in GB optional PUBLISH Description string Model tag description Additional info about model files (e.g. versioning, scope, i.e. what is the model used for, e.g. simulation, control, etc.) - Human readable marketplace description","title":"Model"},{"location":"assets/supporting_metadata/","text":"Concept Key Subkey Type example Value Comment Condition Person ID ID / URI Unique identifier for the Person Created at ISO 8601 Date of creation Version Integer Version number of the Person First name Text First name of the Person Last name Text Last name of the Person Email Email Email address of the Person CV Text Short description of the Person Image Image Profile picture of the Person Affiliation ID / URI Legal Entity the Person is affiliated with Legal Entity (Organization) ID ID / URI Unique identifier for the Legal Entity Created at ISO 8601 Date of creation Version Integer Version number of the Legal Entity Author ID / URI Identifier of the Author of the Legal Entity Name Text Name of the Legal Entity Description Text Description of the Legal Entity Logo Image Logo of the Legal Entity URL URL Website of the Legal Entity Location ID / URI? Physical address of the Legal Entity Phone String Phone Number of the Legal Entity VAT ID No. String VAT ID Number of the Legal Entity IP Family ID ID / URI Unique identifier for the IP Fam. Created at ISO 8601 Date of creation Version Integer Version number of the IP Family Author ID / URI Identifier of the Author of the IP Family Manager ID / URI Identifier of the Legal Entity managing the IP Family Name Text Technical Name of the IP Family Image Image Picture of the IP Family Model No. Text Number defined by the IP Man. Description Text Description of the IP Family Capacity Text Capacity of the IP Family IP Man. ID / URI Identifier of the IP Manufacturer (Legal Entity) IP Instance ID ID / URI Unique identifier for the IP Inst. Created at ISO 8601 Date of creation Version Integer Version number of the IP Instance Author ID / URI Identifier of the Author of the IP Instance Operator ID / URI Identifier of the Legal Entity operating the IP Instance IP Family ID / URI Reference to the IP Family Name Text Name of the IP Instance Image Image Picture of the IP Instance Serial No. Text Number defined by the IP Man. Description Text Description of the IP Instance Location ID / URI? Physical location of the IP Instance","title":"Supporting Metadata"}]}